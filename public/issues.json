[
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18859",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18859/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18859/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18859/events",
      "html_url": "https://github.com/facebook/react/issues/18859",
      "id": 614073602,
      "node_id": "MDU6SXNzdWU2MTQwNzM2MDI=",
      "number": 18859,
      "title": "Error: \"Commit tree already contains fiber 19587. This is a bug in React DevTools.\"",
      "user": {
        "login": "Shub1427",
        "id": 11786283,
        "node_id": "MDQ6VXNlcjExNzg2Mjgz",
        "avatar_url": "https://avatars1.githubusercontent.com/u/11786283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Shub1427",
        "html_url": "https://github.com/Shub1427",
        "followers_url": "https://api.github.com/users/Shub1427/followers",
        "following_url": "https://api.github.com/users/Shub1427/following{/other_user}",
        "gists_url": "https://api.github.com/users/Shub1427/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Shub1427/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Shub1427/subscriptions",
        "organizations_url": "https://api.github.com/users/Shub1427/orgs",
        "repos_url": "https://api.github.com/users/Shub1427/repos",
        "events_url": "https://api.github.com/users/Shub1427/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Shub1427/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-05-07T13:49:45Z",
      "updated_at": "2020-05-07T13:49:45Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Describe what you were doing when the bug occurred:\r\n1. I did profiling on a list, that gets updated on each pagination api call.\r\n2. Once the profiling was done, I moved around in the Profiler to view the Flamegraph\r\n3. Moving to second capture, the Profiler crashed.\r\n\r\n\r\n**DevTools version**: 4.6.0-6cceaeb67\r\n\r\n```\r\nComponent stack: in ec\r\n    in div\r\n    in div\r\n    in div\r\n    in So\r\n    in Unknown\r\n    in n\r\n    in Unknown\r\n    in div\r\n    in div\r\n    in rl\r\n    in Ze\r\n    in fn\r\n    in Ga\r\n    in _s\r\n```"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18858",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18858/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18858/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18858/events",
      "html_url": "https://github.com/facebook/react/issues/18858",
      "id": 613979299,
      "node_id": "MDU6SXNzdWU2MTM5NzkyOTk=",
      "number": 18858,
      "title": "[eslint-plugin-react-hooks] async functions should be allowed for custom effects",
      "user": {
        "login": "vkurchatkin",
        "id": 2993861,
        "node_id": "MDQ6VXNlcjI5OTM4NjE=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/2993861?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vkurchatkin",
        "html_url": "https://github.com/vkurchatkin",
        "followers_url": "https://api.github.com/users/vkurchatkin/followers",
        "following_url": "https://api.github.com/users/vkurchatkin/following{/other_user}",
        "gists_url": "https://api.github.com/users/vkurchatkin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/vkurchatkin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vkurchatkin/subscriptions",
        "organizations_url": "https://api.github.com/users/vkurchatkin/orgs",
        "repos_url": "https://api.github.com/users/vkurchatkin/repos",
        "events_url": "https://api.github.com/users/vkurchatkin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/vkurchatkin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2020-05-07T11:23:33Z",
      "updated_at": "2020-05-07T20:21:42Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "Consider the following code:\r\n\r\n```js\r\nuseAsyncEffect(async () => {\r\n  await foo()\r\n}, []);\r\n```\r\n\r\nEslint give the following error:\r\n\r\n```js\r\n  11:18  error  Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\r\n\r\nuseEffect(() => {\r\n  async function fetchData() {\r\n    // You can await here\r\n    const response = await MyAPI.getData(someId);\r\n    // ...\r\n  }\r\n  fetchData();\r\n}, [someId]); // Or [] if effect doesn't need props or state\r\n```\r\n\r\nThere are 2 problems with that:\r\n\r\n1. The error is provided by `react-hooks/exhaustive-deps`, but this has nothing to do with deps or exhaustiveness. I can't disable this warning without disable actually checking for exhaustive deps.\r\n2. In general the error is bogus. Statement \"Effect callbacks are synchronous to prevent race conditions\" is only true for built-in effects, and is definitely not true for `useAsyncEffect`, which built specifically to support asynchronous callbacks.\r\n\r\neslint-plugin-react-hooks version: 4.0.0\r\n\r\n## The current behavior\r\n\r\n`react-hooks/exhaustive-deps` gives an error for this code\r\n\r\n## The expected behavior\r\n\r\n`react-hooks/exhaustive-deps` should not give an error for this code\r\n\r\n"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18857",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18857/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18857/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18857/events",
      "html_url": "https://github.com/facebook/react/issues/18857",
      "id": 613941449,
      "node_id": "MDU6SXNzdWU2MTM5NDE0NDk=",
      "number": 18857,
      "title": "[eslint-plugin-react-hooks] just mark react's implemented hooks as invalid in classes",
      "user": {
        "login": "DoubleU23",
        "id": 5007050,
        "node_id": "MDQ6VXNlcjUwMDcwNTA=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/5007050?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DoubleU23",
        "html_url": "https://github.com/DoubleU23",
        "followers_url": "https://api.github.com/users/DoubleU23/followers",
        "following_url": "https://api.github.com/users/DoubleU23/following{/other_user}",
        "gists_url": "https://api.github.com/users/DoubleU23/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DoubleU23/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DoubleU23/subscriptions",
        "organizations_url": "https://api.github.com/users/DoubleU23/orgs",
        "repos_url": "https://api.github.com/users/DoubleU23/repos",
        "events_url": "https://api.github.com/users/DoubleU23/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DoubleU23/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-05-07T10:19:52Z",
      "updated_at": "2020-05-07T10:19:52Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "## The current behavior\r\n`react-hooks/rules-of-hooks` marks custom hooks to be invalid in classes\r\n\r\n## The expected behavior\r\nimho this rules should only mark react's implemented hooks as invalid in classes\r\n\r\n__as the rule states:__\r\n\"React Hook \"useTranslation\" cannot be called in a class component.  \r\nReact Hooks must be called in a React function component __or a custom React Hook function__.\"\r\n\r\n__so it is allowed to use custom hook functions in classes?__ (at least it works)\r\n\r\nif that's wrong (usage of custom hooks), then:\r\n* why does it work\r\n* the rule statement should be changed\r\n\r\n__BTW:__ altought it might be no classical custom hook, maybe just a function using a hook,\r\n__but it should not be marked as hook, just because of the prefix?__\r\n\r\n\r\n## The alternative way\r\n__support a whitelist for that rule?__\r\n\r\nrelated to #15227, #14791, #17636"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18855",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18855/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18855/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18855/events",
      "html_url": "https://github.com/facebook/react/pull/18855",
      "id": 613845089,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NDE0NTE2MTcx",
      "number": 18855,
      "title": "rough implementation of direct context updates",
      "user": {
        "login": "gnoff",
        "id": 2716369,
        "node_id": "MDQ6VXNlcjI3MTYzNjk=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/2716369?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gnoff",
        "html_url": "https://github.com/gnoff",
        "followers_url": "https://api.github.com/users/gnoff/followers",
        "following_url": "https://api.github.com/users/gnoff/following{/other_user}",
        "gists_url": "https://api.github.com/users/gnoff/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gnoff/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gnoff/subscriptions",
        "organizations_url": "https://api.github.com/users/gnoff/orgs",
        "repos_url": "https://api.github.com/users/gnoff/repos",
        "events_url": "https://api.github.com/users/gnoff/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gnoff/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2020-05-07T07:43:36Z",
      "updated_at": "2020-05-07T08:20:38Z",
      "closed_at": null,
      "author_association": "NONE",
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/18855",
        "html_url": "https://github.com/facebook/react/pull/18855",
        "diff_url": "https://github.com/facebook/react/pull/18855.diff",
        "patch_url": "https://github.com/facebook/react/pull/18855.patch"
      },
      "body": "This is an early implementation of an alternative method of propagating context updates which avoids walking the Provider's sub-tree\r\n\r\nWill update description with more detail soon but high level\r\n\r\n## Implementation\r\n- when creating a context dependency (a read) if no `reader` yet exists, attach one.\r\n- readers provide Providers a list of fibers that have read from them\r\n- on propagation, readers are evaluated for updates just like all fibers are today during the walk\r\n- on render a fiber will copy readers into new context dependencies if the context item matches in the same \"slot\"\r\n- If there is a discrepancy (rare) we stuff the old reader in a lazily created danglingReaders array and worry about cleaning up if this WIP fiber is committed and then renders again\r\n- If during a render there are danglingReaders they are cleaned up in the prepareToReadContext phase\r\n- on unmount all readers are cleaned up\r\n\r\n\r\n## Pros:\r\n* Providers hold reference to specific fibers that read from them, can jump straight to them rather than walk entire sub-tree. Perf scales at `O(# of readers)` instead of `O(size of tree)`\r\n* Still maintains lightweight mount/unmount overhead\r\n\r\n## Perf Impact\r\n* holds reference to the first fiber that read from Provider so unknown whether that fiber or alternate are part of the current tree. need to examine both's dependency list which can in common cases lead to double evaluations (relatively minor given offsets in not walking tree) and in rare cases unnecessary renders (if context reads change from render to render then effectively the past two renders contexts can trigger an update)\r\n* extra object allocation to set up the reader. paid once on mount typically\r\n* small cleanup work on unmount. it shouldn't have major impacts on perf but it's commit phase so I know there is sensitivity here\r\n\r\n## Notes\r\n* a lot of the complexity comes from `readContext` since this is the only way you can read from a variable list of contexts on each render\r\n* my new tests were mostly used to observe internal implementations working looking at now removed log statements. They probably shouldn't stick around since they don't test new functionality alone. not sure if it's worth writing tests to assert that for instance readers get cleaned up appropriately but if it is how do I don that and still just test the public api?\r\n* the change to Depdendency_old type should be made explicit, i sorta shortcutted a bit but if this PR is interesting I can certainly refine it"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18853",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18853/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18853/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18853/events",
      "html_url": "https://github.com/facebook/react/issues/18853",
      "id": 613750028,
      "node_id": "MDU6SXNzdWU2MTM3NTAwMjg=",
      "number": 18853,
      "title": "Bug: Devtools conceal lack of setImmediate polyfill",
      "user": {
        "login": "matt-tingen",
        "id": 8584728,
        "node_id": "MDQ6VXNlcjg1ODQ3Mjg=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/8584728?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/matt-tingen",
        "html_url": "https://github.com/matt-tingen",
        "followers_url": "https://api.github.com/users/matt-tingen/followers",
        "following_url": "https://api.github.com/users/matt-tingen/following{/other_user}",
        "gists_url": "https://api.github.com/users/matt-tingen/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/matt-tingen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/matt-tingen/subscriptions",
        "organizations_url": "https://api.github.com/users/matt-tingen/orgs",
        "repos_url": "https://api.github.com/users/matt-tingen/repos",
        "events_url": "https://api.github.com/users/matt-tingen/events{/privacy}",
        "received_events_url": "https://api.github.com/users/matt-tingen/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-05-07T03:38:24Z",
      "updated_at": "2020-05-07T03:38:24Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: N/A; sample app uses 16.13.1\r\nDevtools version: 6cceaeb67 on FF and Chrome\r\n\r\n## Steps To Reproduce\r\n\r\nGenerally speaking:\r\n1. Call `setImmediate` in a react app without a polyfill after react devtools have initialized.\r\n\r\nTo demonstrate in the sample app:\r\n1. Open sample app with browser devtools closed.\r\n2. Click button and observe that `setImmediate` is not defined initially or after mounting react.\r\n3. Open browser devtools to allow react devtools extension to initialize.\r\n4. Click button and observe that `setImmediate` has been defined.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\nI couldn't figure out how to prevent polyfills from being included on CodeSandbox.\r\n[js bin editor](https://jsbin.com/rixunedepi/1/edit?html)\r\n[repro page](https://output.jsbin.com/rixunedepi/1)\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nReact devtools globally defines a polyfill for `setImmediate`, masking the problem.\r\n\r\n## The expected behavior\r\nUsage of `setImmediate` without a polyfill in an app will throw an error."
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18852",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18852/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18852/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18852/events",
      "html_url": "https://github.com/facebook/react/pull/18852",
      "id": 613747614,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NDE0NDM5OTcw",
      "number": 18852,
      "title": "[DevTools] Allow to continue dragging when leaving profiler picker",
      "user": {
        "login": "bl00mber",
        "id": 16987322,
        "node_id": "MDQ6VXNlcjE2OTg3MzIy",
        "avatar_url": "https://avatars1.githubusercontent.com/u/16987322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bl00mber",
        "html_url": "https://github.com/bl00mber",
        "followers_url": "https://api.github.com/users/bl00mber/followers",
        "following_url": "https://api.github.com/users/bl00mber/following{/other_user}",
        "gists_url": "https://api.github.com/users/bl00mber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bl00mber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bl00mber/subscriptions",
        "organizations_url": "https://api.github.com/users/bl00mber/orgs",
        "repos_url": "https://api.github.com/users/bl00mber/repos",
        "events_url": "https://api.github.com/users/bl00mber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bl00mber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2020-05-07T03:29:49Z",
      "updated_at": "2020-05-07T04:22:38Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/18852",
        "html_url": "https://github.com/facebook/react/pull/18852",
        "diff_url": "https://github.com/facebook/react/pull/18852.diff",
        "patch_url": "https://github.com/facebook/react/pull/18852.patch"
      },
      "body": "Do not stop computing value when leaving profiler picker during dragging, resolve #16492\r\nbvaughn/react-devtools-experimental#141\r\n\r\n**Before:**\r\n![Peek 2020-05-07 before-drag](https://user-images.githubusercontent.com/16987322/81251390-99bd9f00-903c-11ea-9b09-4c124360f1d2.gif)\r\n\r\n**After:**\r\n![Peek 2020-05-07 after-drag](https://user-images.githubusercontent.com/16987322/81251407-a215da00-903c-11ea-9871-a89fde57ef75.gif)\r\n"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18844",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18844/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18844/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18844/events",
      "html_url": "https://github.com/facebook/react/issues/18844",
      "id": 613452867,
      "node_id": "MDU6SXNzdWU2MTM0NTI4Njc=",
      "number": 18844,
      "title": "Bug: Render after suspense is thrown away leaving DOM unmatched with state",
      "user": {
        "login": "joeljeske",
        "id": 5332920,
        "node_id": "MDQ6VXNlcjUzMzI5MjA=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5332920?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joeljeske",
        "html_url": "https://github.com/joeljeske",
        "followers_url": "https://api.github.com/users/joeljeske/followers",
        "following_url": "https://api.github.com/users/joeljeske/following{/other_user}",
        "gists_url": "https://api.github.com/users/joeljeske/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/joeljeske/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/joeljeske/subscriptions",
        "organizations_url": "https://api.github.com/users/joeljeske/orgs",
        "repos_url": "https://api.github.com/users/joeljeske/repos",
        "events_url": "https://api.github.com/users/joeljeske/events{/privacy}",
        "received_events_url": "https://api.github.com/users/joeljeske/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-05-06T16:31:08Z",
      "updated_at": "2020-05-06T16:31:08Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 16.12.0\r\n\r\n## Steps To Reproduce\r\n\r\n A component that suspends as a result of a context update is never rendered to DOM after suspension is finished.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\nhttps://codesandbox.io/s/react-suspense-context-bug-rklls?file=/package.json:163-170\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nIf a component suspends as a result of a context update, the component's render is called after suspension is finished but the result of the render is not reflected in the DOM (and effects aren't called). \r\n\r\n## The expected behavior\r\n\r\nIf a component suspends as a result of a context update, the component's render should be called and flushed to the DOM and effects called. \r\n\r\n## Related Issues: \r\n\r\nhttps://github.com/facebook/react/issues/17356 - seems related to memoization but this does not use any memoization"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18843",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18843/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18843/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18843/events",
      "html_url": "https://github.com/facebook/react/issues/18843",
      "id": 613354386,
      "node_id": "MDU6SXNzdWU2MTMzNTQzODY=",
      "number": 18843,
      "title": "\"Pause on caught exceptions\" enabled always breaks on this line",
      "user": {
        "login": "kylechartio",
        "id": 55005058,
        "node_id": "MDQ6VXNlcjU1MDA1MDU4",
        "avatar_url": "https://avatars0.githubusercontent.com/u/55005058?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kylechartio",
        "html_url": "https://github.com/kylechartio",
        "followers_url": "https://api.github.com/users/kylechartio/followers",
        "following_url": "https://api.github.com/users/kylechartio/following{/other_user}",
        "gists_url": "https://api.github.com/users/kylechartio/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kylechartio/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kylechartio/subscriptions",
        "organizations_url": "https://api.github.com/users/kylechartio/orgs",
        "repos_url": "https://api.github.com/users/kylechartio/repos",
        "events_url": "https://api.github.com/users/kylechartio/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kylechartio/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        },
        {
          "id": 717031390,
          "node_id": "MDU6TGFiZWw3MTcwMzEzOTA=",
          "url": "https://api.github.com/repos/facebook/react/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "6ce26a",
          "default": true,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2020-05-06T14:14:46Z",
      "updated_at": "2020-05-06T20:59:58Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "In Chrome, when I am using the current stable version of react devtools extenison (4.6.0 (3/26/2020)), if I have \"Pause on caught exceptions\" enabled, I always hit this breakpoint:\r\n\r\nhttps://github.com/facebook/react/blob/c2d1561c60507189b43ae96c6b89580874367e36/packages/react-devtools-shared/src/hook.js#L185\r\n\r\n`ReferenceError: i is not defined\r\n    at Object.inject (<anonymous>:1:1116)\r\n    at injectInternals (react-dom.development.js:9842)\r\n    at injectIntoDevTools (react-dom.development.js:20715)\r\n    at eval (react-dom.development.js:21244)`\r\n\r\nIt would be nice if the published extension had an options page so that I could disable this try/catch block. (for example enabling NODE_ENV=test or something). \r\n\r\nOr, perhaps that code block is not really relevant to the chrome extension case, and that code path could be ignored for the chrome extension."
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18841",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18841/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18841/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18841/events",
      "html_url": "https://github.com/facebook/react/issues/18841",
      "id": 613294659,
      "node_id": "MDU6SXNzdWU2MTMyOTQ2NTk=",
      "number": 18841,
      "title": "Bug: Error in useEffect is caught in ErrorBoundary, but still logs uncaught error to console in tests",
      "user": {
        "login": "mpeyper",
        "id": 23029903,
        "node_id": "MDQ6VXNlcjIzMDI5OTAz",
        "avatar_url": "https://avatars0.githubusercontent.com/u/23029903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mpeyper",
        "html_url": "https://github.com/mpeyper",
        "followers_url": "https://api.github.com/users/mpeyper/followers",
        "following_url": "https://api.github.com/users/mpeyper/following{/other_user}",
        "gists_url": "https://api.github.com/users/mpeyper/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mpeyper/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mpeyper/subscriptions",
        "organizations_url": "https://api.github.com/users/mpeyper/orgs",
        "repos_url": "https://api.github.com/users/mpeyper/repos",
        "events_url": "https://api.github.com/users/mpeyper/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mpeyper/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-05-06T12:50:33Z",
      "updated_at": "2020-05-06T21:01:50Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 16.13.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Create a component with a useEffect hook\r\n2. Render the component in an error boundary using `react-test-renderer`\r\n3. Throw an error synchronously in the effect callback (i.e. not in a promise callback)\r\n4. Observe the error in the console\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://github.com/mpeyper/error-boundary-error-repro\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\n> **When you first clone the repo, all the tests are being skipped.  This is to reduce the noise when observing the output.  Please remove the `.skip` from the tests to see the output.**\r\n>\r\n> Note that I have also used `react-error-boundary` for creating the error boundaries in the example repo to simplify the setup, but if you believe this is interfering with test, I'm happy to hand roll an error boundary instead.\r\n\r\nGiven the following two components, the way in which the error is being handled is inconsistent when using `react-test-renderer` vs. `react-dom` (via `@testing-library/react` in my example):\r\n\r\n```jsx\r\nexport function HasErrorInRender() {\r\n  throw Error(\"This error was expected\")\r\n}\r\n\r\nexport function HasErrorInEffect() {\r\n  useEffect(() => {\r\n    throw Error(\"This error was expected\")\r\n  })\r\n\r\n  return <p>This component has an error in an effect</p>\r\n}\r\n```\r\n\r\nWhen rendering with `react-dom`, both [the following tests](https://github.com/mpeyper/error-boundary-error-repro/blob/master/src/HasError.test.js#L7) pass, and produce the same output in the console:\r\n\r\n```jsx\r\ndescribe('@testing-library/react', () => {\r\n  test('should catch error in render', () => {\r\n    let err = null\r\n    function Fallback({ error }) {\r\n      err = error\r\n      return <p>An error was thrown</p>\r\n    }\r\n\r\n    render((\r\n      <ErrorBoundary FallbackComponent={Fallback}>\r\n        <HasErrorInRender />\r\n      </ErrorBoundary>\r\n    ))\r\n\r\n    expect(err).toEqual(Error(\"This error was expected\"))\r\n  })\r\n\r\n  test('should catch error in effect', () => {\r\n    let err = null\r\n    function Fallback({ error }) {\r\n      err = error\r\n      return <p>An error was thrown</p>\r\n    }\r\n\r\n    render((\r\n      <ErrorBoundary FallbackComponent={Fallback}>\r\n        <HasErrorInEffect />\r\n      </ErrorBoundary>\r\n    ))\r\n\r\n    expect(err).toEqual(Error(\"This error was expected\"))\r\n  })\r\n})\r\n```\r\n\r\nThe output they produce is:\r\n\r\n```txt\r\n  console.error node_modules/jsdom/lib/jsdom/virtual-console.js:29\r\n    Error: Uncaught [Error: This error was expected]\r\n        at reportException (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)\r\n        at invokeEventListeners (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:209:9)\r\n        at HTMLUnknownElementImpl._dispatch (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:119:9)\r\n        at HTMLUnknownElementImpl.dispatchEvent (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:82:17)\r\n        at HTMLUnknownElementImpl.dispatchEvent (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/nodes/HTMLElement-impl.js:30:27)\r\n        at HTMLUnknownElement.dispatchEvent (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:157:21)\r\n        at Object.invokeGuardedCallbackDev (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:237:16)\r\n        at invokeGuardedCallback (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:292:31)\r\n        at beginWork$1 (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:23203:7)\r\n        at performUnitOfWork (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:22157:12) Error: This error was expected\r\n        at HasErrorInRender (/<REDACTED>/error-boundary-error-repro/src/HasError.js:4:9)\r\n        at renderWithHooks (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:14803:18)\r\n        at mountIndeterminateComponent (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:17482:13)\r\n        at beginWork (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:18596:16)\r\n        at HTMLUnknownElement.callCallback (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:188:14)\r\n        at invokeEventListeners (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:193:27)\r\n        at HTMLUnknownElementImpl._dispatch (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:119:9)\r\n        at HTMLUnknownElementImpl.dispatchEvent (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:82:17)\r\n        at HTMLUnknownElementImpl.dispatchEvent (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/nodes/HTMLElement-impl.js:30:27)\r\n        at HTMLUnknownElement.dispatchEvent (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:157:21)\r\n        at Object.invokeGuardedCallbackDev (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:237:16)\r\n        at invokeGuardedCallback (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:292:31)\r\n        at beginWork$1 (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:23203:7)\r\n        at performUnitOfWork (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:22157:12)\r\n        at workLoopSync (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:22130:22)\r\n        at performSyncWorkOnRoot (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:21756:9)\r\n        at scheduleUpdateOnFiber (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:21188:7)\r\n        at updateContainer (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:24373:3)\r\n        at /<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:24758:7\r\n        at unbatchedUpdates (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:21903:12)\r\n        at legacyRenderSubtreeIntoContainer (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:24757:5)\r\n        at Object.render (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:24840:10)\r\n        at /<REDACTED>/error-boundary-error-repro/node_modules/@testing-library/react/dist/pure.js:86:25\r\n        at batchedUpdates$1 (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom.development.js:21856:12)\r\n        at act (/<REDACTED>/error-boundary-error-repro/node_modules/react-dom/cjs/react-dom-test-utils.development.js:929:14)\r\n        at render (/<REDACTED>/error-boundary-error-repro/node_modules/@testing-library/react/dist/pure.js:82:26)\r\n        at Object.<anonymous> (/<REDACTED>/error-boundary-error-repro/src/HasError.test.js:15:5)\r\n        at Object.asyncJestTest (/<REDACTED>/error-boundary-error-repro/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\r\n        at /<REDACTED>/error-boundary-error-repro/node_modules/jest-jasmine2/build/queueRunner.js:43:12\r\n        at new Promise (<anonymous>)\r\n        at mapper (/<REDACTED>/error-boundary-error-repro/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\r\n        at /<REDACTED>/error-boundary-error-repro/node_modules/jest-jasmine2/build/queueRunner.js:73:41\r\n        at processTicksAndRejections (internal/process/task_queues.js:97:5)\r\n\r\n  console.error node_modules/react-dom/cjs/react-dom.development.js:19527\r\n    The above error occurred in the <HasErrorInRender> component:\r\n        in HasErrorInRender (at HasError.test.js:17)\r\n        in ErrorBoundary (at HasError.test.js:16)\r\n    \r\n    React will try to recreate this component tree from scratch using the error boundary you provided, ErrorBoundary.\r\n```\r\n\r\nThis is somewhat expected when using `react-dom` and reflects the output one would see in the browser console if the some components were rendered in an app (you can run `npm start` in the example repo if you would like to observe this).\r\n\r\nHowever, where things start to get a bit strange is when the renderer is [replaced with `react-test-renderer`](https://github.com/mpeyper/error-boundary-error-repro/blob/master/src/HasError.test.js#L41) and the same tests are run:\r\n\r\n```jsx\r\ndescribe('react-test-renderer', () => {\r\n  test('should catch error in render', () => {\r\n    let err = null\r\n    function Fallback({ error }) {\r\n      err = error\r\n      return <p>An error was thrown</p>\r\n    }\r\n\r\n    act(() => {\r\n      create((\r\n        <ErrorBoundary FallbackComponent={Fallback}>\r\n          <HasErrorInRender />\r\n        </ErrorBoundary>\r\n      ))\r\n    })\r\n\r\n    expect(err).toEqual(Error(\"This error was expected\"))\r\n  })\r\n\r\n  test('should catch error in effect', () => {\r\n    let err = null\r\n    function Fallback({ error }) {\r\n      err = error\r\n      return <p>An error was thrown</p>\r\n    }\r\n\r\n    act(() => {\r\n      create((\r\n        <ErrorBoundary FallbackComponent={Fallback}>\r\n          <HasErrorInEffect />\r\n        </ErrorBoundary>\r\n      ))\r\n    })\r\n\r\n    expect(err).toEqual(Error(\"This error was expected\"))\r\n  })\r\n})\r\n```\r\n\r\nAgain both tests here do pass, but the output they produce is not the same.  When the first test (error in the `render` function) is run, it only produces the following output:\r\n\r\n```txt\r\n  console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10141\r\n    The above error occurred in the <HasErrorInRender> component:\r\n        in HasErrorInRender (at HasError.test.js:52)\r\n        in ErrorBoundary (at HasError.test.js:51)\r\n    \r\n    React will try to recreate this component tree from scratch using the error boundary you provided, ErrorBoundary.\r\n```\r\n\r\nAs you can see, the [frustratingly difficult to suppress](https://github.com/facebook/react/issues/15520) error log from the error boundary is present, but the long stack trace from the uncaught error that is present in the `react-dom` output is not.\r\n\r\nWhen the second test (error in the `useEffect` callback) is run, the output is:\r\n\r\n```txt\r\n  console.error node_modules/jsdom/lib/jsdom/virtual-console.js:29\r\n    Error: Uncaught [Error: This error was expected]\r\n        at reportException (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)\r\n        at invokeEventListeners (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:209:9)\r\n        at HTMLUnknownElementImpl._dispatch (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:119:9)\r\n        at HTMLUnknownElementImpl.dispatchEvent (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:82:17)\r\n        at HTMLUnknownElementImpl.dispatchEvent (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/nodes/HTMLElement-impl.js:30:27)\r\n        at HTMLUnknownElement.dispatchEvent (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:157:21)\r\n        at Object.invokeGuardedCallbackDev (/<REDACTED>/error-boundary-error-repro/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10021:16)\r\n        at invokeGuardedCallback (/<REDACTED>/error-boundary-error-repro/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10073:31)\r\n        at flushPassiveEffectsImpl (/<REDACTED>/error-boundary-error-repro/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13345:9)\r\n        at unstable_runWithPriority (/<REDACTED>/error-boundary-error-repro/node_modules/scheduler/cjs/scheduler.development.js:653:12) Error: This error was expected\r\n        at /<REDACTED>/error-boundary-error-repro/src/HasError.js:9:11\r\n        at commitHookEffectListMount (/<REDACTED>/error-boundary-error-repro/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10345:26)\r\n        at commitPassiveHookEffects (/<REDACTED>/error-boundary-error-repro/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10383:11)\r\n        at HTMLUnknownElement.callCallback (/<REDACTED>/error-boundary-error-repro/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9972:14)\r\n        at invokeEventListeners (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:193:27)\r\n        at HTMLUnknownElementImpl._dispatch (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:119:9)\r\n        at HTMLUnknownElementImpl.dispatchEvent (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:82:17)\r\n        at HTMLUnknownElementImpl.dispatchEvent (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/nodes/HTMLElement-impl.js:30:27)\r\n        at HTMLUnknownElement.dispatchEvent (/<REDACTED>/error-boundary-error-repro/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:157:21)\r\n        at Object.invokeGuardedCallbackDev (/<REDACTED>/error-boundary-error-repro/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10021:16)\r\n        at invokeGuardedCallback (/<REDACTED>/error-boundary-error-repro/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10073:31)\r\n        at flushPassiveEffectsImpl (/<REDACTED>/error-boundary-error-repro/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13345:9)\r\n        at unstable_runWithPriority (/<REDACTED>/error-boundary-error-repro/node_modules/scheduler/cjs/scheduler.development.js:653:12)\r\n        at runWithPriority (/<REDACTED>/error-boundary-error-repro/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1775:10)\r\n        at flushPassiveEffects (/<REDACTED>/error-boundary-error-repro/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13312:12)\r\n        at Object.<anonymous>.flushWork (/<REDACTED>/error-boundary-error-repro/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:14883:10)\r\n        at act (/<REDACTED>/error-boundary-error-repro/node_modules/react-test-renderer/cjs/react-test-renderer.development.js:15001:9)\r\n        at Object.<anonymous> (/<REDACTED>/error-boundary-error-repro/src/HasError.test.js:67:5)\r\n        at Object.asyncJestTest (/<REDACTED>/error-boundary-error-repro/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\r\n        at /<REDACTED>/error-boundary-error-repro/node_modules/jest-jasmine2/build/queueRunner.js:43:12\r\n        at new Promise (<anonymous>)\r\n        at mapper (/<REDACTED>/error-boundary-error-repro/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\r\n        at /<REDACTED>/error-boundary-error-repro/node_modules/jest-jasmine2/build/queueRunner.js:73:41\r\n        at processTicksAndRejections (internal/process/task_queues.js:97:5)\r\n\r\n  console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10141\r\n    The above error occurred in the <HasErrorInEffect> component:\r\n        in HasErrorInEffect (at HasError.test.js:70)\r\n        in ErrorBoundary (at HasError.test.js:69)\r\n    \r\n    React will try to recreate this component tree from scratch using the error boundary you provided, ErrorBoundary.\r\n```\r\n\r\nNow, the uncaught error message is back, which is not what I would have expected.  Even more confusingly, when inspecting the stacktrace of the uncaught error, it has references to `jsdom` which I was of the belief was not a dependency of `react-test-renderer`.  I suspect that there is some `jest` and/or `jsdom` trickery going on to report the uncaught error, rather than `react-test-renderer` using it in some way, but I'm not familiar enough with any of them to know for certain.\r\n\r\nThe part that's has me the most perplexed is how the error boundary can intercept the error to pass into it's handler callbacks (surfaced in my example in `react-error-boundary`'s `FallbackComponent`) without catching the error, unless it is throwing it again after catching it, but then both tests would be producing the uncaught error output, right?\r\n\r\n## The expected behavior\r\n\r\nMy expected (and preferred) behaviour here would be for the the `react-test-renderer` test to only produce the error boundary error log and not have any additional uncaught error output."
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18836",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18836/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18836/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18836/events",
      "html_url": "https://github.com/facebook/react/pull/18836",
      "id": 612959558,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NDEzODA1NjE5",
      "number": 18836,
      "title": "[WIP] SuspenseList should do a second pass if all children are dehydrated",
      "user": {
        "login": "sebmarkbage",
        "id": 63648,
        "node_id": "MDQ6VXNlcjYzNjQ4",
        "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebmarkbage",
        "html_url": "https://github.com/sebmarkbage",
        "followers_url": "https://api.github.com/users/sebmarkbage/followers",
        "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
        "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
        "repos_url": "https://api.github.com/users/sebmarkbage/repos",
        "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        },
        {
          "id": 1775958285,
          "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
          "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
          "name": "React Core Team",
          "color": "9149d1",
          "default": false,
          "description": "Opened by a member of the React Core Team"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2020-05-05T23:40:05Z",
      "updated_at": "2020-05-07T06:57:06Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/18836",
        "html_url": "https://github.com/facebook/react/pull/18836",
        "diff_url": "https://github.com/facebook/react/pull/18836.diff",
        "patch_url": "https://github.com/facebook/react/pull/18836.patch"
      },
      "body": "SuspenseList doesn't trigger the \"together\" mode when all children are client rendered.\r\n\r\nThe issue here is that we have an optimization to figure out if the list might be suspended:\r\nhttps://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactFiberCompleteWork.old.js#L1033\r\n\r\nThis doesn't trigger when we're hitting client-rendered boundaries that are still in fallback states because we leave them behind so they don't \"suspend\" this pass.\r\n\r\nOne fix could be triggering renderDidSuspend in this case. It might not be the right fix because there's no need to suspend *this* commit really. Maybe it could be a different flag. It also causes a second pass over the list which delays actually getting to the client rendering.\r\n\r\nThis fix reveals three other bugs that are already observable in other scenarios:\r\n\r\n- [ ] Doing a second pass over the list causes hydration state to get confused so we forget about the content we already hydrated and never delete them. Leaving us with duplicate loading states, forever.\r\n- [ ] In the old reconciler, this causes an infinite loop because suspending means that we try the scheduled work for the dehydrated boundary to unblock, which schedules more work etc.\r\n- [x] ~In the new reconciler, this causes the real content to never commit. It just stays at the fallback for some reason. Not sure why.~ This is not a bug. The test error reflects a behavior change, that we probably don't want."
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18835",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18835/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18835/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18835/events",
      "html_url": "https://github.com/facebook/react/issues/18835",
      "id": 612934072,
      "node_id": "MDU6SXNzdWU2MTI5MzQwNzI=",
      "number": 18835,
      "title": "useMutableSource: Release version snapshots once hydration is finished",
      "user": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1775958285,
          "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
          "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
          "name": "React Core Team",
          "color": "9149d1",
          "default": false,
          "description": "Opened by a member of the React Core Team"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "bvaughn",
          "id": 29597,
          "node_id": "MDQ6VXNlcjI5NTk3",
          "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bvaughn",
          "html_url": "https://github.com/bvaughn",
          "followers_url": "https://api.github.com/users/bvaughn/followers",
          "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
          "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
          "organizations_url": "https://api.github.com/users/bvaughn/orgs",
          "repos_url": "https://api.github.com/users/bvaughn/repos",
          "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
          "received_events_url": "https://api.github.com/users/bvaughn/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-05-05T22:28:47Z",
      "updated_at": "2020-05-05T22:29:47Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Follow up for #18183 and PR #18771.\r\n\r\nDecide when to clear `mutableSourceEagerHydrationData`. We don't currently have a way to detect when all outstanding hydration work is finished. (It may never finish.) This means that in use cases where the version is the entire sore (e.g. an immutable store without a version \"number\") we would retain a reference to that store, preventing it from being GCed.\r\n"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18834",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18834/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18834/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18834/events",
      "html_url": "https://github.com/facebook/react/issues/18834",
      "id": 612929873,
      "node_id": "MDU6SXNzdWU2MTI5Mjk4NzM=",
      "number": 18834,
      "title": "Bug: different between {",
      "user": {
        "login": "jillesme",
        "id": 2955483,
        "node_id": "MDQ6VXNlcjI5NTU0ODM=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2955483?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jillesme",
        "html_url": "https://github.com/jillesme",
        "followers_url": "https://api.github.com/users/jillesme/followers",
        "following_url": "https://api.github.com/users/jillesme/following{/other_user}",
        "gists_url": "https://api.github.com/users/jillesme/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jillesme/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jillesme/subscriptions",
        "organizations_url": "https://api.github.com/users/jillesme/orgs",
        "repos_url": "https://api.github.com/users/jillesme/repos",
        "events_url": "https://api.github.com/users/jillesme/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jillesme/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2020-05-05T22:18:44Z",
      "updated_at": "2020-05-06T09:15:33Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:\r\n\r\n## Steps To Reproduce\r\n\r\n1.\r\n2.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\n\r\n## The expected behavior\r\n"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18831",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18831/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18831/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18831/events",
      "html_url": "https://github.com/facebook/react/issues/18831",
      "id": 612790612,
      "node_id": "MDU6SXNzdWU2MTI3OTA2MTI=",
      "number": 18831,
      "title": "Error: \"Commit tree does not contain fiber 256. This is a bug in React DevTools.\"",
      "user": {
        "login": "RickeyWard",
        "id": 342468,
        "node_id": "MDQ6VXNlcjM0MjQ2OA==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/342468?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RickeyWard",
        "html_url": "https://github.com/RickeyWard",
        "followers_url": "https://api.github.com/users/RickeyWard/followers",
        "following_url": "https://api.github.com/users/RickeyWard/following{/other_user}",
        "gists_url": "https://api.github.com/users/RickeyWard/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/RickeyWard/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/RickeyWard/subscriptions",
        "organizations_url": "https://api.github.com/users/RickeyWard/orgs",
        "repos_url": "https://api.github.com/users/RickeyWard/repos",
        "events_url": "https://api.github.com/users/RickeyWard/events{/privacy}",
        "received_events_url": "https://api.github.com/users/RickeyWard/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-05-05T18:01:22Z",
      "updated_at": "2020-05-05T18:01:22Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "Describe what you were doing when the bug occurred:\r\n1. Profiling a slow component\r\nIn a component that rendered 5000 pre tags with single lines of text in them, that has an unrelated controlled text box is the same component that was typed into while profiling. App hung a while and, when it rendered again the error was in the profiler.\r\n\r\n---------------------------------------------\r\nPlease do not remove the text below this line\r\n---------------------------------------------\r\n\r\nDevTools version: 4.6.0-6cceaeb67\r\n\r\nCall stack: at j (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40:162825)\r\n    at N (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40:161628)\r\n    at e.getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40:164582)\r\n    at ec (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40:339280)\r\n    at ci (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:59620)\r\n    at Ll (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:109960)\r\n    at qc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:102381)\r\n    at Hc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:102306)\r\n    at Vc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:102171)\r\n    at Tc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:98781)\r\n\r\nComponent stack: in ec\r\n    in div\r\n    in div\r\n    in div\r\n    in So\r\n    in Unknown\r\n    in n\r\n    in Unknown\r\n    in div\r\n    in div\r\n    in rl\r\n    in Ze\r\n    in fn\r\n    in Ga\r\n    in _s"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18829",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18829/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18829/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18829/events",
      "html_url": "https://github.com/facebook/react/issues/18829",
      "id": 612742555,
      "node_id": "MDU6SXNzdWU2MTI3NDI1NTU=",
      "number": 18829,
      "title": "Feature suggestion:  possibility to intercept passage of props for the components, in order to transform them",
      "user": {
        "login": "misaeldossantos",
        "id": 47726159,
        "node_id": "MDQ6VXNlcjQ3NzI2MTU5",
        "avatar_url": "https://avatars2.githubusercontent.com/u/47726159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/misaeldossantos",
        "html_url": "https://github.com/misaeldossantos",
        "followers_url": "https://api.github.com/users/misaeldossantos/followers",
        "following_url": "https://api.github.com/users/misaeldossantos/following{/other_user}",
        "gists_url": "https://api.github.com/users/misaeldossantos/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/misaeldossantos/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/misaeldossantos/subscriptions",
        "organizations_url": "https://api.github.com/users/misaeldossantos/orgs",
        "repos_url": "https://api.github.com/users/misaeldossantos/repos",
        "events_url": "https://api.github.com/users/misaeldossantos/events{/privacy}",
        "received_events_url": "https://api.github.com/users/misaeldossantos/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2020-05-05T16:42:09Z",
      "updated_at": "2020-05-07T10:16:39Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "this sounds interesting: possibility to intercept a component's props, transforming them.\r\nThus, it would be possible to implement directives as in vue and angular:\r\n\r\nexample:\r\n```jsx\r\n<div\r\n   @showIf = \"visible\"\r\n>\r\n<span> Something </span>\r\n</div>\r\n\r\nfunction renderIf (condition, oldProps) {\r\n   return merge (oldProps, {style: {visible: condition}})\r\n}\r\n```\r\n\r\nI think why not? The react could be made more flexible. Interceptor functions could be placed via context API. We could implement transformations of props. In react native, it would be possible to place classes, transforming them into styles\r\n\r\n```jsx\r\n\r\n<View @classes=\"flex\"></View>\r\n\r\nfunction test(classes, oldProps) {\r\n    return merge(oldProps, {style: {flex: 1}})\r\n}\r\n\r\n```\r\n"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18828",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18828/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18828/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18828/events",
      "html_url": "https://github.com/facebook/react/issues/18828",
      "id": 612606483,
      "node_id": "MDU6SXNzdWU2MTI2MDY0ODM=",
      "number": 18828,
      "title": "Bug [ESLint Hooks Plugin]: When using a `typeof` type guard it requires the value as a dependency",
      "user": {
        "login": "egonm12",
        "id": 20042349,
        "node_id": "MDQ6VXNlcjIwMDQyMzQ5",
        "avatar_url": "https://avatars0.githubusercontent.com/u/20042349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/egonm12",
        "html_url": "https://github.com/egonm12",
        "followers_url": "https://api.github.com/users/egonm12/followers",
        "following_url": "https://api.github.com/users/egonm12/following{/other_user}",
        "gists_url": "https://api.github.com/users/egonm12/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/egonm12/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/egonm12/subscriptions",
        "organizations_url": "https://api.github.com/users/egonm12/orgs",
        "repos_url": "https://api.github.com/users/egonm12/repos",
        "events_url": "https://api.github.com/users/egonm12/events{/privacy}",
        "received_events_url": "https://api.github.com/users/egonm12/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1249821345,
          "node_id": "MDU6TGFiZWwxMjQ5ODIxMzQ1",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20ESLint%20Rules",
          "name": "Component: ESLint Rules",
          "color": "f7afdb",
          "default": false,
          "description": ""
        },
        {
          "id": 40929153,
          "node_id": "MDU6TGFiZWw0MDkyOTE1Mw==",
          "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Enhancement",
          "name": "Type: Enhancement",
          "color": "84b6eb",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2020-05-05T13:33:32Z",
      "updated_at": "2020-05-05T14:26:50Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\n**Version:** eslint-plugin-react-hooks@1.7.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. Create a component with local state\r\n2. Create a useEffect with a variable inside, that points to the `typeof` of the state variable\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\nhttps://codesandbox.io/s/nervous-williamson-2i99l?file=/src/App.tsx:210-261\r\n\r\n## The current behavior\r\n`react-exhaustive-deps` complains that the state variable should be included in the dependency list\r\n\r\n## The expected behavior\r\n`react-exhaustive-deps` shouldn't complain that the state variable should be included in the dependency list because it's value is never used."
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18826",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18826/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18826/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18826/events",
      "html_url": "https://github.com/facebook/react/issues/18826",
      "id": 612442974,
      "node_id": "MDU6SXNzdWU2MTI0NDI5NzQ=",
      "number": 18826,
      "title": "Bug [eslint hooks plugin]: Allow conditional hooks based on static constants",
      "user": {
        "login": "adrianhelvik",
        "id": 7836058,
        "node_id": "MDQ6VXNlcjc4MzYwNTg=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/7836058?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adrianhelvik",
        "html_url": "https://github.com/adrianhelvik",
        "followers_url": "https://api.github.com/users/adrianhelvik/followers",
        "following_url": "https://api.github.com/users/adrianhelvik/following{/other_user}",
        "gists_url": "https://api.github.com/users/adrianhelvik/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adrianhelvik/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adrianhelvik/subscriptions",
        "organizations_url": "https://api.github.com/users/adrianhelvik/orgs",
        "repos_url": "https://api.github.com/users/adrianhelvik/repos",
        "events_url": "https://api.github.com/users/adrianhelvik/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adrianhelvik/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-05-05T08:50:42Z",
      "updated_at": "2020-05-05T08:51:30Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "This scenario should not trigger a warning as it follows the rules of hooks.\r\n\r\n```javascript\r\nimport React from 'react'\r\n\r\nconst SOME_STATIC_CONDITION = process.env.SOME_STATIC_CONDITION === 'true'\r\n\r\nfunction App() {\r\n  if (SOME_STATIC_CONDITION) {\r\n    React.useEffect(() => {\r\n      console.log('This should only run when compiled with SOME_STATIC_CONDITION=true')\r\n    })\r\n  }\r\n  return null\r\n}\r\n```\r\n\r\nIn general, constant values defined at the top level are immutable and should not trigger this warning. Same thing with process.env.*."
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18824",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18824/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18824/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18824/events",
      "html_url": "https://github.com/facebook/react/issues/18824",
      "id": 612293691,
      "node_id": "MDU6SXNzdWU2MTIyOTM2OTE=",
      "number": 18824,
      "title": "Error: \"Could not find commit data for root \"98\" and commit 8\"",
      "user": {
        "login": "WaSheep",
        "id": 17945318,
        "node_id": "MDQ6VXNlcjE3OTQ1MzE4",
        "avatar_url": "https://avatars3.githubusercontent.com/u/17945318?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/WaSheep",
        "html_url": "https://github.com/WaSheep",
        "followers_url": "https://api.github.com/users/WaSheep/followers",
        "following_url": "https://api.github.com/users/WaSheep/following{/other_user}",
        "gists_url": "https://api.github.com/users/WaSheep/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/WaSheep/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/WaSheep/subscriptions",
        "organizations_url": "https://api.github.com/users/WaSheep/orgs",
        "repos_url": "https://api.github.com/users/WaSheep/repos",
        "events_url": "https://api.github.com/users/WaSheep/events{/privacy}",
        "received_events_url": "https://api.github.com/users/WaSheep/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-05-05T03:09:21Z",
      "updated_at": "2020-05-05T03:09:21Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "Describe what you were doing when the bug occurred:\r\n1. \r\n2. \r\n3. \r\n\r\n---------------------------------------------\r\nPlease do not remove the text below this line\r\n---------------------------------------------\r\n\r\nDevTools version: 4.6.0-6cceaeb67\r\n\r\nCall stack: at n.value (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40:173658)\r\n    at p (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40:359968)\r\n    at Zc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40:360183)\r\n    at ci (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:59620)\r\n    at nl (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:69923)\r\n    at Ll (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:110996)\r\n    at qc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:102381)\r\n    at Hc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:102306)\r\n    at Vc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:102171)\r\n    at Tc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:98781)\r\n\r\nComponent stack: in Zc\r\n    in div\r\n    in div\r\n    in So\r\n    in Unknown\r\n    in n\r\n    in Unknown\r\n    in div\r\n    in div\r\n    in rl\r\n    in Ze\r\n    in fn\r\n    in Ga\r\n    in _s"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18823",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18823/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18823/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18823/events",
      "html_url": "https://github.com/facebook/react/issues/18823",
      "id": 612235697,
      "node_id": "MDU6SXNzdWU2MTIyMzU2OTc=",
      "number": 18823,
      "title": "useMutableSource: allow getSnapshot to return a function",
      "user": {
        "login": "dai-shi",
        "id": 490574,
        "node_id": "MDQ6VXNlcjQ5MDU3NA==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/490574?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dai-shi",
        "html_url": "https://github.com/dai-shi",
        "followers_url": "https://api.github.com/users/dai-shi/followers",
        "following_url": "https://api.github.com/users/dai-shi/following{/other_user}",
        "gists_url": "https://api.github.com/users/dai-shi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dai-shi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dai-shi/subscriptions",
        "organizations_url": "https://api.github.com/users/dai-shi/orgs",
        "repos_url": "https://api.github.com/users/dai-shi/repos",
        "events_url": "https://api.github.com/users/dai-shi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dai-shi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-05-04T23:34:25Z",
      "updated_at": "2020-05-04T23:34:25Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "Ref: https://github.com/reactjs/rfcs/pull/147#issuecomment-623740218\r\n\r\nReact version: 0.0.0-experimental-e5d06e34b\r\n\r\n## Steps To Reproduce\r\n\r\n1. createMutableSource that contains functions\r\n2. getSnapshot returns one of the functions\r\n\r\nLink to code example:\r\n\r\nhttps://codesandbox.io/s/jovial-dew-1eg4t?file=/src/App.js\r\n\r\n## The current behavior\r\n\r\nIf getSnapshot returns a function, it will run the function in render. This results in various errors.\r\n\r\nMy workaround: return an object wrapping a function, and destruct on caller.\r\n\r\n> For now, you can work around this by returning a function that returns your function\r\n\r\nI don't know how this works as workaround.\r\n\r\n## The expected behavior\r\n\r\nIt would be nice if returning a function just works.\r\n\r\nNote: this is not a rare use case in my library https://github.com/dai-shi/use-context-selector\r\nbecause we often pass `[state, setState]` in a context value."
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18822",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18822/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18822/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18822/events",
      "html_url": "https://github.com/facebook/react/issues/18822",
      "id": 612218315,
      "node_id": "MDU6SXNzdWU2MTIyMTgzMTU=",
      "number": 18822,
      "title": "Add devtools \"Inspect React component\" to right-click menu",
      "user": {
        "login": "sophiebits",
        "id": 6820,
        "node_id": "MDQ6VXNlcjY4MjA=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sophiebits",
        "html_url": "https://github.com/sophiebits",
        "followers_url": "https://api.github.com/users/sophiebits/followers",
        "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
        "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
        "organizations_url": "https://api.github.com/users/sophiebits/orgs",
        "repos_url": "https://api.github.com/users/sophiebits/repos",
        "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sophiebits/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        },
        {
          "id": 121709921,
          "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
          "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
          "name": "Type: Feature Request",
          "color": "c7def8",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-05-04T22:50:47Z",
      "updated_at": "2020-05-04T22:50:47Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "body": "Noticed today that Vue's devtools have an awesome \"Inspect Vue component\" option when right-clicking on a webpage (added in https://github.com/vuejs/vue-devtools/pull/479).\r\n\r\nThe React devtools should have the same feature! It would be useful when debugging for sure.\r\n"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18821",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18821/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18821/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18821/events",
      "html_url": "https://github.com/facebook/react/issues/18821",
      "id": 612155859,
      "node_id": "MDU6SXNzdWU2MTIxNTU4NTk=",
      "number": 18821,
      "title": "Bug: ARIA Attribute Reflection",
      "user": {
        "login": "jonathantneal",
        "id": 188426,
        "node_id": "MDQ6VXNlcjE4ODQyNg==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/188426?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonathantneal",
        "html_url": "https://github.com/jonathantneal",
        "followers_url": "https://api.github.com/users/jonathantneal/followers",
        "following_url": "https://api.github.com/users/jonathantneal/following{/other_user}",
        "gists_url": "https://api.github.com/users/jonathantneal/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jonathantneal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jonathantneal/subscriptions",
        "organizations_url": "https://api.github.com/users/jonathantneal/orgs",
        "repos_url": "https://api.github.com/users/jonathantneal/repos",
        "events_url": "https://api.github.com/users/jonathantneal/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jonathantneal/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 127893911,
          "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
          "name": "Component: DOM",
          "color": "fef2c0",
          "default": false,
          "description": null
        },
        {
          "id": 620368407,
          "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
          "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
          "name": "Resolution: Needs More Information",
          "color": "fffde7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2020-05-04T20:43:38Z",
      "updated_at": "2020-05-05T00:50:04Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "React version: 16.13.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Implement the [gov.uk \"breadcrumbs\" component](https://design-system.service.gov.uk/components/breadcrumbs/) in React.\r\n2. Use the [ARIA 1.2](https://www.w3.org/TR/wai-aria-1.2/#idl-interface) `ariaCurrent` property, as available in Edge 81, Chrome 81, and Safari 13.\r\n3. See warning:\r\n   ```\r\n   Warning: Invalid ARIA attribute `ariaCurrent`. Did you mean `aria-current`?\r\n   ```\r\n\r\nLink to code example: [https://codesandbox.io/s/bold-glitter-lpfpq](https://codesandbox.io/s/bold-glitter-lpfpq?file=/src/App.js)\r\n\r\n```jsx\r\nfunction Breadcrumbs() {\r\n  return (\r\n    <ol>\r\n      <li>\r\n        <a href=\"/\">\r\n          Home\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a href=\"/passports\">\r\n          Passports, travel and living abroad\r\n        </a>\r\n      </li>\r\n      <li ariaCurrent=\"page\">\r\n        Travel abroad\r\n      </li>\r\n    </ol>\r\n  );\r\n}\r\n```\r\n\r\nThese properties are helpful reflections that will also be followed by implementations of [`aria*Elements` properties](https://w3c.github.io/aria/#reflection) which would eliminate the need for an `id` by every reference. This is _not_ a bug report on the support of those properties, but they are mentioned to present the higher value these properties will have over dash-less shorthands. I would (naively) expect these (more simple) reflections to worthy of support on their own merits of being implemented web standards.\r\n\r\n## The current behavior\r\n\r\nThe `ariaCurrent` property is not applied, an `ariacurrent` attribute is applied, and a warning is displayed in development.\r\n\r\n ```\r\n Warning: Invalid ARIA attribute `ariaCurrent`. Did you mean `aria-current`?\r\n ```\r\n\r\n## The expected behavior\r\n\r\nThe `ariaCurrent` property is applied."
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18819",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18819/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18819/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18819/events",
      "html_url": "https://github.com/facebook/react/issues/18819",
      "id": 612135706,
      "node_id": "MDU6SXNzdWU2MTIxMzU3MDY=",
      "number": 18819,
      "title": "Bug: eslint-plugin-react-hooks cannot use optional chaining in deps",
      "user": {
        "login": "coolkev",
        "id": 319334,
        "node_id": "MDQ6VXNlcjMxOTMzNA==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/319334?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/coolkev",
        "html_url": "https://github.com/coolkev",
        "followers_url": "https://api.github.com/users/coolkev/followers",
        "following_url": "https://api.github.com/users/coolkev/following{/other_user}",
        "gists_url": "https://api.github.com/users/coolkev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/coolkev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/coolkev/subscriptions",
        "organizations_url": "https://api.github.com/users/coolkev/orgs",
        "repos_url": "https://api.github.com/users/coolkev/repos",
        "events_url": "https://api.github.com/users/coolkev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/coolkev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2020-05-04T20:08:59Z",
      "updated_at": "2020-05-04T21:13:48Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 16.3.1\r\neslint-plugin-react-hooks version: 4.0.0\r\n\r\n## Steps To Reproduce\r\nUse ?. in dependency to any of the react hooks.\r\n```\r\nexport default function App() {\r\n    const x = Date.now() % 2 === 0 ? { test: true } : undefined;\r\n  \r\n    React.useEffect(() => {\r\n      if (x?.test) {\r\n        console.log('test');\r\n      }\r\n    }, [x?.test]);\r\n  \r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Hello CodeSandbox</h1>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n```\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\nI was unable to reproduce the behavior in codesandbox, it must be transforming the code or stripping out the ? before linting. It happens in VS Code.\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\neslint errors occur:\r\nReact Hook React.useEffect has a missing dependency: 'x'. Either include it or remove the dependency array.eslintreact-hooks/exhaustive-deps\r\nReact Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.eslintreact-hooks/exhaustive-deps\r\n![image](https://user-images.githubusercontent.com/319334/81008656-25021f00-8e08-11ea-8f91-5c533671d75a.png)\r\n\r\n\r\n## The expected behavior\r\nI would expect it to work just like it does currently for non-optional child member access.\r\n![image](https://user-images.githubusercontent.com/319334/81008703-36e3c200-8e08-11ea-8aa9-56df8ccf9531.png)\r\nWhen ? is removed, it no longer shows eslint errors, but obviously would fail at runtime if x is undefined."
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18818",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18818/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18818/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18818/events",
      "html_url": "https://github.com/facebook/react/issues/18818",
      "id": 612059866,
      "node_id": "MDU6SXNzdWU2MTIwNTk4NjY=",
      "number": 18818,
      "title": "Bug: devtools profiler flamegraph \"rendered at\" tooltip equal for all entries",
      "user": {
        "login": "eps1lon",
        "id": 12292047,
        "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
        "avatar_url": "https://avatars3.githubusercontent.com/u/12292047?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eps1lon",
        "html_url": "https://github.com/eps1lon",
        "followers_url": "https://api.github.com/users/eps1lon/followers",
        "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
        "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
        "organizations_url": "https://api.github.com/users/eps1lon/orgs",
        "repos_url": "https://api.github.com/users/eps1lon/repos",
        "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eps1lon/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 155984160,
          "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
          "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
          "name": "Status: Unconfirmed",
          "color": "d4c5f9",
          "default": false,
          "description": "A potential issue that we haven't yet confirmed as a bug"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-05-04T17:58:37Z",
      "updated_at": "2020-05-04T17:58:37Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "\r\n\r\nReact version: 16.13.1\r\ndevtools version: 4.6.0 (3/26/2020). Created from revision 6cceaeb67 on 3/26/2020.\r\n\r\n## Steps To Reproduce\r\n\r\n1. Record profiling session\r\n2. Goto flamegraph\r\n3. Hover over individual bars\r\n\r\nLink to code example: https://codesandbox.io/s/cocky-rain-uuoi8?file=/src/index.js\r\n\r\n## The current behavior\r\n\r\n\"rendered at\" uses the value from the root component\r\n\r\n![Screenshot from 2020-05-04 19-56-13](https://user-images.githubusercontent.com/12292047/80997253-5519e400-8e41-11ea-870b-9ed4a8311a30.png)\r\n\r\n\r\n\r\n\r\n## The expected behavior\r\n\r\nit should use the value from the component hovered. Otherwise I don't see much value in displaying it since I could just read the value directly from the root. I thought it was intended for very dense flamegraphs e.g.\r\n![Screenshot from 2020-05-04 19-53-53](https://user-images.githubusercontent.com/12292047/80996992-02402c80-8e41-11ea-9396-f3777c01cf4d.png)\r\n\r\n"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18816",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18816/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18816/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18816/events",
      "html_url": "https://github.com/facebook/react/pull/18816",
      "id": 612044228,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NDEzMDg0OTIy",
      "number": 18816,
      "title": "chore: upgrade to Jest 26",
      "user": {
        "login": "SimenB",
        "id": 1404810,
        "node_id": "MDQ6VXNlcjE0MDQ4MTA=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/1404810?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SimenB",
        "html_url": "https://github.com/SimenB",
        "followers_url": "https://api.github.com/users/SimenB/followers",
        "following_url": "https://api.github.com/users/SimenB/following{/other_user}",
        "gists_url": "https://api.github.com/users/SimenB/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SimenB/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SimenB/subscriptions",
        "organizations_url": "https://api.github.com/users/SimenB/orgs",
        "repos_url": "https://api.github.com/users/SimenB/repos",
        "events_url": "https://api.github.com/users/SimenB/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SimenB/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2020-05-04T17:32:15Z",
      "updated_at": "2020-05-04T17:41:12Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/18816",
        "html_url": "https://github.com/facebook/react/pull/18816",
        "diff_url": "https://github.com/facebook/react/pull/18816.diff",
        "patch_url": "https://github.com/facebook/react/pull/18816.patch"
      },
      "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) typechecks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\nAs mentioned in #18815, it's incoming. I mostly wanna test the new (opt-in) fake timers, but I thought to open a PR with just the bump as well. Includes #18815, so you can choose to just merge this one if you want.\r\n\r\nDraft for now as 26 is still alpha.\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n## Test Plan\r\n\r\nGreen CI\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface. -->\r\n"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18815",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18815/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18815/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18815/events",
      "html_url": "https://github.com/facebook/react/pull/18815",
      "id": 612037522,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NDEzMDc5NTMz",
      "number": 18815,
      "title": "chore: remove usage of deprecated Jest functions",
      "user": {
        "login": "SimenB",
        "id": 1404810,
        "node_id": "MDQ6VXNlcjE0MDQ4MTA=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/1404810?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SimenB",
        "html_url": "https://github.com/SimenB",
        "followers_url": "https://api.github.com/users/SimenB/followers",
        "following_url": "https://api.github.com/users/SimenB/following{/other_user}",
        "gists_url": "https://api.github.com/users/SimenB/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SimenB/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SimenB/subscriptions",
        "organizations_url": "https://api.github.com/users/SimenB/orgs",
        "repos_url": "https://api.github.com/users/SimenB/repos",
        "events_url": "https://api.github.com/users/SimenB/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SimenB/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2020-05-04T17:21:11Z",
      "updated_at": "2020-05-04T17:52:14Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/18815",
        "html_url": "https://github.com/facebook/react/pull/18815",
        "diff_url": "https://github.com/facebook/react/pull/18815.diff",
        "patch_url": "https://github.com/facebook/react/pull/18815.patch"
      },
      "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) typechecks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\nJest 26 is coming today or tomorrow, and we've removed `require.requireActual`. I just ran the lint rule `jest/no-deprecated-functions` on the code base, which also fixes a couple of removals scheduled for Jest 27. Doesn't hurt to be prepared ­ƒÖé \r\n\r\n## Test Plan\r\n\r\nGreen CI\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface. -->\r\n"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18814",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18814/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18814/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18814/events",
      "html_url": "https://github.com/facebook/react/pull/18814",
      "id": 611930398,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NDEyOTk1MjY3",
      "number": 18814,
      "title": "[Memory Leaks] Detach Fibers from nodes with refs",
      "user": {
        "login": "gaearon",
        "id": 810438,
        "node_id": "MDQ6VXNlcjgxMDQzOA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gaearon",
        "html_url": "https://github.com/gaearon",
        "followers_url": "https://api.github.com/users/gaearon/followers",
        "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
        "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
        "organizations_url": "https://api.github.com/users/gaearon/orgs",
        "repos_url": "https://api.github.com/users/gaearon/repos",
        "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gaearon/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        },
        {
          "id": 1775958285,
          "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
          "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
          "name": "React Core Team",
          "color": "9149d1",
          "default": false,
          "description": "Opened by a member of the React Core Team"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2020-05-04T14:43:37Z",
      "updated_at": "2020-05-06T07:21:15Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/18814",
        "html_url": "https://github.com/facebook/react/pull/18814",
        "diff_url": "https://github.com/facebook/react/pull/18814.diff",
        "patch_url": "https://github.com/facebook/react/pull/18814.patch"
      },
      "body": "A more restrained alternative to https://github.com/facebook/react/pull/18690.\r\nAddresses @sebmarkbage's proposal in https://github.com/facebook/react/issues/16087:\r\n\r\n> If a handle on a DOM node is leaked, it takes the React tree with it. This is a fairly easy mistake to make and the effect is pretty high. What we would do here is special case DOM nodes with refs on them, and always detach their back pointer to the React Fiber, if it was ever fully mounted. We currently traverse these trees anyway when they get deleted. We want to stop doing this for most things but for nodes with a ref it seems minor to special case since they typically need to be invoked with null anyway.\r\n\r\nNote: this does not fix any memory leak **in React**; it just makes the impact of **userland** memory leaks less severe.\r\n\r\n**[View without whitespace](https://github.com/facebook/react/compare/master...gaearon:detach-ref?w=1)**\r\n\r\nI checked that this works manually:\r\n\r\n<img width=\"602\" alt=\"Screenshot 2020-05-04 at 15 37 12\" src=\"https://user-images.githubusercontent.com/810438/80978901-90ef8200-8e1e-11ea-9200-e88f81c62ee7.png\">\r\n"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18807",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18807/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18807/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18807/events",
      "html_url": "https://github.com/facebook/react/pull/18807",
      "id": 611469996,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NDEyNjQwOTEx",
      "number": 18807,
      "title": "[Not to be landed] Allow stack to be prepared manually",
      "user": {
        "login": "sebmarkbage",
        "id": 63648,
        "node_id": "MDQ6VXNlcjYzNjQ4",
        "avatar_url": "https://avatars2.githubusercontent.com/u/63648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebmarkbage",
        "html_url": "https://github.com/sebmarkbage",
        "followers_url": "https://api.github.com/users/sebmarkbage/followers",
        "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
        "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
        "repos_url": "https://api.github.com/users/sebmarkbage/repos",
        "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        },
        {
          "id": 1775958285,
          "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
          "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
          "name": "React Core Team",
          "color": "9149d1",
          "default": false,
          "description": "Opened by a member of the React Core Team"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2020-05-03T17:58:07Z",
      "updated_at": "2020-05-03T18:04:33Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/18807",
        "html_url": "https://github.com/facebook/react/pull/18807",
        "diff_url": "https://github.com/facebook/react/pull/18807.diff",
        "patch_url": "https://github.com/facebook/react/pull/18807.patch"
      },
      "body": "I experimented with making it so that custom prepareStackTrace could be used with our stacks.\r\n\r\nIt didn't really pan out all that well because they need an Error object and sometimes prepend the error message etc. where as our stacks don't do that.\r\n\r\nI'm also not sure it's worth the code because this is not cross-browser compatible."
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18806",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18806/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18806/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18806/events",
      "html_url": "https://github.com/facebook/react/pull/18806",
      "id": 611312599,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NDEyNTM0Nzk2",
      "number": 18806,
      "title": "fix: Error: Cannot read property 'duration' of undefined",
      "user": {
        "login": "Amine-H",
        "id": 6276978,
        "node_id": "MDQ6VXNlcjYyNzY5Nzg=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/6276978?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Amine-H",
        "html_url": "https://github.com/Amine-H",
        "followers_url": "https://api.github.com/users/Amine-H/followers",
        "following_url": "https://api.github.com/users/Amine-H/following{/other_user}",
        "gists_url": "https://api.github.com/users/Amine-H/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Amine-H/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Amine-H/subscriptions",
        "organizations_url": "https://api.github.com/users/Amine-H/orgs",
        "repos_url": "https://api.github.com/users/Amine-H/repos",
        "events_url": "https://api.github.com/users/Amine-H/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Amine-H/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2020-05-03T01:53:05Z",
      "updated_at": "2020-05-04T16:12:06Z",
      "closed_at": null,
      "author_association": "NONE",
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/18806",
        "html_url": "https://github.com/facebook/react/pull/18806",
        "diff_url": "https://github.com/facebook/react/pull/18806.diff",
        "patch_url": "https://github.com/facebook/react/pull/18806.patch"
      },
      "body": "## Summary\r\n\r\nFix for #18786 and #18798\r\n\r\nJust a few things I should mention first, I am really new to the code base, ~not sure what was the intention to use the indexes from `commits` instead of `commitData`.\r\nIn other words if `commitData` has more commit than `commits` (interaction commits) then this PR would be showing more commits than whan It should.~\r\n\r\n#### UPDATE:\r\nI have updated my changes to \"ignore\" commits that have no corresponding `commitData`\r\n\r\n## Test Plan\r\n\r\n- Profile https://react-example1.s3.amazonaws.com/index.html\r\n- Scroll down to the end of the list\r\n\r\nThanks @shiftyp for the clear reproduction steps\r\n"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18804",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18804/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18804/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18804/events",
      "html_url": "https://github.com/facebook/react/issues/18804",
      "id": 611233947,
      "node_id": "MDU6SXNzdWU2MTEyMzM5NDc=",
      "number": 18804,
      "title": "Error: \"Could not find commit data for root \"957\" and commit 2\"",
      "user": {
        "login": "rohanvachheta",
        "id": 38291892,
        "node_id": "MDQ6VXNlcjM4MjkxODky",
        "avatar_url": "https://avatars2.githubusercontent.com/u/38291892?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rohanvachheta",
        "html_url": "https://github.com/rohanvachheta",
        "followers_url": "https://api.github.com/users/rohanvachheta/followers",
        "following_url": "https://api.github.com/users/rohanvachheta/following{/other_user}",
        "gists_url": "https://api.github.com/users/rohanvachheta/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rohanvachheta/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rohanvachheta/subscriptions",
        "organizations_url": "https://api.github.com/users/rohanvachheta/orgs",
        "repos_url": "https://api.github.com/users/rohanvachheta/repos",
        "events_url": "https://api.github.com/users/rohanvachheta/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rohanvachheta/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2020-05-02T17:13:34Z",
      "updated_at": "2020-05-04T02:22:03Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "Describe what you were doing when the bug occurred:\r\n1. \r\n2. \r\n3. \r\n\r\n---------------------------------------------\r\nPlease do not remove the text below this line\r\n---------------------------------------------\r\n\r\nDevTools version: 4.6.0-6cceaeb67\r\n\r\nCall stack: at n.value (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40:173658)\r\n    at p (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40:359968)\r\n    at Zc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40:360183)\r\n    at ci (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:59620)\r\n    at nl (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:69923)\r\n    at Ll (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:110996)\r\n    at qc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:102381)\r\n    at Hc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:102306)\r\n    at Vc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:102171)\r\n    at Tc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:98781)\r\n\r\nComponent stack: in Zc\r\n    in div\r\n    in div\r\n    in So\r\n    in Unknown\r\n    in n\r\n    in Unknown\r\n    in div\r\n    in div\r\n    in rl\r\n    in Ze\r\n    in fn\r\n    in Ga\r\n    in _s"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18802",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18802/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18802/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18802/events",
      "html_url": "https://github.com/facebook/react/pull/18802",
      "id": 611011778,
      "node_id": "MDExOlB1bGxSZXF1ZXN0NDEyMzI4NzYz",
      "number": 18802,
      "title": "[DevTools] Improve HOC search UX",
      "user": {
        "login": "bl00mber",
        "id": 16987322,
        "node_id": "MDQ6VXNlcjE2OTg3MzIy",
        "avatar_url": "https://avatars1.githubusercontent.com/u/16987322?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bl00mber",
        "html_url": "https://github.com/bl00mber",
        "followers_url": "https://api.github.com/users/bl00mber/followers",
        "following_url": "https://api.github.com/users/bl00mber/following{/other_user}",
        "gists_url": "https://api.github.com/users/bl00mber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bl00mber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bl00mber/subscriptions",
        "organizations_url": "https://api.github.com/users/bl00mber/orgs",
        "repos_url": "https://api.github.com/users/bl00mber/repos",
        "events_url": "https://api.github.com/users/bl00mber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bl00mber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 196858374,
          "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
          "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
          "name": "CLA Signed",
          "color": "e7e7e7",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2020-05-01T22:46:50Z",
      "updated_at": "2020-05-02T17:55:01Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "pull_request": {
        "url": "https://api.github.com/repos/facebook/react/pulls/18802",
        "html_url": "https://github.com/facebook/react/pull/18802",
        "diff_url": "https://github.com/facebook/react/pull/18802.diff",
        "patch_url": "https://github.com/facebook/react/pull/18802.patch"
      },
      "body": "close #16467\r\n\r\n![Peek 2020-05-02](https://user-images.githubusercontent.com/16987322/80846989-7ef7be80-8c27-11ea-80f4-b498ccbc9bf6.gif)\r\n"
    },
    {
      "url": "https://api.github.com/repos/facebook/react/issues/18798",
      "repository_url": "https://api.github.com/repos/facebook/react",
      "labels_url": "https://api.github.com/repos/facebook/react/issues/18798/labels{/name}",
      "comments_url": "https://api.github.com/repos/facebook/react/issues/18798/comments",
      "events_url": "https://api.github.com/repos/facebook/react/issues/18798/events",
      "html_url": "https://github.com/facebook/react/issues/18798",
      "id": 610732010,
      "node_id": "MDU6SXNzdWU2MTA3MzIwMTA=",
      "number": 18798,
      "title": "Error: \"Cannot read property 'duration' of undefined\"",
      "user": {
        "login": "shiftyp",
        "id": 131928,
        "node_id": "MDQ6VXNlcjEzMTkyOA==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/131928?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shiftyp",
        "html_url": "https://github.com/shiftyp",
        "followers_url": "https://api.github.com/users/shiftyp/followers",
        "following_url": "https://api.github.com/users/shiftyp/following{/other_user}",
        "gists_url": "https://api.github.com/users/shiftyp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shiftyp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shiftyp/subscriptions",
        "organizations_url": "https://api.github.com/users/shiftyp/orgs",
        "repos_url": "https://api.github.com/users/shiftyp/repos",
        "events_url": "https://api.github.com/users/shiftyp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shiftyp/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 710573595,
          "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
          "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
          "name": "Component: Developer Tools",
          "color": "fbca04",
          "default": false,
          "description": null
        },
        {
          "id": 40929151,
          "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
          "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
          "name": "Type: Bug",
          "color": "b60205",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2020-05-01T12:41:08Z",
      "updated_at": "2020-05-07T20:27:56Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "Describe what you were doing when the bug occurred:\r\n1. Add interaction tracing with unstable_trace\r\n2. Record a profile, navigate to Profiler > Profiled Interactions\r\n3. Error appears when scrolling view or immediately\r\n\r\n![Kapture 2020-05-01 at 8 37 44](https://user-images.githubusercontent.com/131928/80805899-3688c400-8b87-11ea-88ca-3a7ae7de3589.gif)\r\n---------------------------------------------\r\nPlease do not remove the text below this line\r\n---------------------------------------------\r\n\r\nDevTools version: 4.6.0-6cceaeb67\r\n\r\nCall stack: at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40:344360\r\n    at Array.map (<anonymous>)\r\n    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40:344166\r\n    at ci (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:59620)\r\n    at Ll (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:109960)\r\n    at qc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:102381)\r\n    at Hc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:102306)\r\n    at Vc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:102171)\r\n    at Tc (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:98781)\r\n    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:32:46014\r\n\r\nComponent stack: in Unknown\r\n    in Unknown\r\n    in div\r\n    in div\r\n    in n\r\n    in div\r\n    in bc\r\n    in div\r\n    in n\r\n    in div\r\n    in vc\r\n    in div\r\n    in div\r\n    in div\r\n    in So\r\n    in Unknown\r\n    in n\r\n    in Unknown\r\n    in div\r\n    in div\r\n    in rl\r\n    in Ze\r\n    in fn\r\n    in Ga\r\n    in _s"
    }
  ]
  